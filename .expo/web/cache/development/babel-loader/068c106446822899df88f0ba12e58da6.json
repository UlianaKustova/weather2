{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nexport default App = function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState('..'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      forecast1 = _useState6[0],\n      setForecast1 = _useState6[1];\n\n  var _useState7 = useState('..'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      forecast2 = _useState8[0],\n      setForecast2 = _useState8[1];\n\n  var _useState9 = useState('..'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      forecast3 = _useState10[0],\n      setForecast3 = _useState10[1];\n\n  var _useState11 = useState('..'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      forecastAW1 = _useState12[0],\n      setForecastAW1 = _useState12[1];\n\n  var _useState13 = useState('..'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      forecastAW2 = _useState14[0],\n      setForecastAW2 = _useState14[1];\n\n  var _useState15 = useState('..'),\n      _useState16 = _slicedToArray(_useState15, 2),\n      forecastAW3 = _useState16[0],\n      setForecastAW3 = _useState16[1];\n\n  var getForecast = function getForecast() {\n    var response, json, response2, json2;\n    return _regeneratorRuntime.async(function getForecast$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=56.1943&lon=44.0007', {\n              method: 'GET',\n              headers: {\n                'Accept': '*/*',\n                'User-Agent': 'MyTestApp/0.2'\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json.properties.timeseries);\n            ddd = JSON.stringify(json.properties.timeseries[5].data.instant.details.air_temperature);\n            setForecast1(JSON.stringify(json.properties.timeseries[6].data.instant.details.air_temperature));\n            setForecast2(JSON.stringify(json.properties.timeseries[24].data.instant.details.air_temperature));\n            setForecast3(JSON.stringify(json.properties.timeseries[48].data.instant.details.air_temperature));\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(fetch('http://dataservice.accuweather.com/forecasts/v1/daily/5day/294199?apikey=6L1XZVx53Vr591ZyuqZveNAGStoRgghs&metric=true', {\n              method: 'GET',\n              headers: {\n                'Accept': '*/*',\n                'User-Agent': 'MyTestApp/0.2'\n              }\n            }));\n\n          case 14:\n            response2 = _context.sent;\n            _context.next = 17;\n            return _regeneratorRuntime.awrap(response2.json());\n\n          case 17:\n            json2 = _context.sent;\n            setForecastAW1(JSON.stringify(json2.DailyForecasts[0].Temperature.Minimum.Value));\n            setForecastAW2(JSON.stringify(json2.DailyForecasts[1].Temperature.Minimum.Value));\n            setForecastAW3(JSON.stringify(json2.DailyForecasts[2].Temperature.Minimum.Value));\n            _context.next = 26;\n            break;\n\n          case 23:\n            _context.prev = 23;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 26:\n            _context.prev = 26;\n            setLoading(false);\n            return _context.finish(26);\n\n          case 29:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 23, 26, 29]], Promise);\n  };\n\n  useEffect(function () {\n    getForecast();\n  }, []);\n  return React.createElement(SafeAreaView, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.titleView\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Enter your city\")), React.createElement(View, {\n    style: styles.search\n  }, React.createElement(View, {\n    style: styles.input\n  }, React.createElement(TextInput, null)), React.createElement(View, {\n    style: styles.btnSrch\n  }, React.createElement(Button, {\n    title: \"k\",\n    onPress: function onPress() {\n      return Alert.alert('Simple Button pressed');\n    }\n  }))), React.createElement(View, {\n    style: styles.line0\n  }, React.createElement(View, {\n    style: styles.column\n  }, React.createElement(Text, {\n    style: styles.title\n  })), React.createElement(View, {\n    style: styles.column\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Today\")), React.createElement(View, {\n    style: styles.column\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Tomorrow\")), React.createElement(View, {\n    style: styles.column\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"After tomorrow\"))), React.createElement(View, {\n    style: styles.line\n  }, React.createElement(View, {\n    style: styles.column\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"YR\")), React.createElement(View, {\n    style: styles.column\n  }, isLoading ? React.createElement(Text, {\n    style: styles.title\n  }, \"...\") : React.createElement(Text, {\n    style: styles.title\n  }, forecast1)), React.createElement(View, {\n    style: styles.column\n  }, isLoading ? React.createElement(Text, {\n    style: styles.title\n  }, \"...\") : React.createElement(Text, {\n    style: styles.title\n  }, forecast2)), React.createElement(View, {\n    style: styles.column\n  }, isLoading ? React.createElement(Text, {\n    style: styles.title\n  }, \"...\") : React.createElement(Text, {\n    style: styles.title\n  }, forecast3))), React.createElement(View, {\n    style: styles.line\n  }, React.createElement(View, {\n    style: styles.column\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"AccuWeather\")), React.createElement(View, {\n    style: styles.column\n  }, isLoading ? React.createElement(Text, {\n    style: styles.title\n  }, \"...\") : React.createElement(Text, {\n    style: styles.title\n  }, forecastAW1)), React.createElement(View, {\n    style: styles.column\n  }, isLoading ? React.createElement(Text, {\n    style: styles.title\n  }, \"...\") : React.createElement(Text, {\n    style: styles.title\n  }, forecastAW2)), React.createElement(View, {\n    style: styles.column\n  }, isLoading ? React.createElement(Text, {\n    style: styles.title\n  }, \"...\") : React.createElement(Text, {\n    style: styles.title\n  }, forecastAW3))), React.createElement(View, {\n    style: styles.line\n  }, React.createElement(View, {\n    style: styles.column\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Yandex\")), React.createElement(View, {\n    style: styles.column\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"500\")), React.createElement(View, {\n    style: styles.column\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"-0\")), React.createElement(View, {\n    style: styles.column\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"-2\"))), React.createElement(View, {\n    style: styles.line\n  }, React.createElement(View, {\n    style: styles.column\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Calculator\")), React.createElement(View, {\n    style: styles.column\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"19\")), React.createElement(View, {\n    style: styles.column\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"-5\")), React.createElement(View, {\n    style: styles.column\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"-11\"))), React.createElement(View, {\n    style: {\n      padding: 24\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, null) : React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(_ref, index) {\n      var time = _ref.time;\n      return time;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Text, null, item.data.instant.details.air_temperature);\n    }\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginHorizontal: \"3%\",\n    marginTop: 30\n  },\n  title: {\n    textAlign: 'center'\n  },\n  titleView: {\n    marginVertical: '2%'\n  },\n  btnSrch: {\n    flex: 1\n  },\n  input: {\n    borderWidth: 1,\n    flex: 10\n  },\n  search: {\n    flexDirection: \"row\"\n  },\n  line: {\n    flexDirection: \"row\",\n    marginTop: 10\n  },\n  column: {\n    flex: 1\n  },\n  line0: {\n    flexDirection: \"row\",\n    marginTop: 40\n  }\n});","map":{"version":3,"sources":["C:/Uliana/weather/weatherParcer/App.js"],"names":["StatusBar","React","useEffect","useState","App","isLoading","setLoading","data","setData","forecast1","setForecast1","forecast2","setForecast2","forecast3","setForecast3","forecastAW1","setForecastAW1","forecastAW2","setForecastAW2","forecastAW3","setForecastAW3","getForecast","fetch","method","headers","response","json","properties","timeseries","ddd","JSON","stringify","instant","details","air_temperature","response2","json2","DailyForecasts","Temperature","Minimum","Value","console","error","styles","container","titleView","title","search","input","btnSrch","Alert","alert","line0","column","line","padding","index","time","item","StyleSheet","create","marginHorizontal","marginTop","textAlign","marginVertical","flex","borderWidth","flexDirection"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, SafeAreaView, Button, View, Alert, TextInput, ActivityIndicator, FlatList } from 'react-native';\n\n\nexport default App = () => {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [forecast1, setForecast1] = useState('..');\n  const [forecast2, setForecast2] = useState('..');\n  const [forecast3, setForecast3] = useState('..');\n  const [forecastAW1, setForecastAW1] = useState('..');\n  const [forecastAW2, setForecastAW2] = useState('..');\n  const [forecastAW3, setForecastAW3] = useState('..');\n\n\n\n  const getForecast = async () => {\n    try {\n      const response = await fetch('https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=56.1943&lon=44.0007',\n\n        {\n          method: 'GET',\n          headers: {\n            'Accept': '*/*',\n            'User-Agent': 'MyTestApp/0.2'\n          }\n        }\n      );\n      const json = await response.json();//эвэит ждет ответа\n      //console.log(JSON.stringify(json));\n      setData(json.properties.timeseries);\n      //console.log(json.properties.timeseries.time[3 - 1].data.instant.details.air_temperature);\n      ddd = JSON.stringify(json.properties.timeseries[5].data.instant.details.air_temperature);\n      //console.log(ddd);\n      setForecast1(JSON.stringify(json.properties.timeseries[6].data.instant.details.air_temperature));\n      setForecast2(JSON.stringify(json.properties.timeseries[24].data.instant.details.air_temperature));\n      setForecast3(JSON.stringify(json.properties.timeseries[48].data.instant.details.air_temperature));\n      //console.log(JSON.search(json.properties.timeseries, '//data'));\n      //rrr = response;\n      //setData(response);\n\n\n      const response2 = await fetch('http://dataservice.accuweather.com/forecasts/v1/daily/5day/294199?apikey=6L1XZVx53Vr591ZyuqZveNAGStoRgghs&metric=true',\n\n        {\n          method: 'GET',\n          headers: {\n            'Accept': '*/*',\n            'User-Agent': 'MyTestApp/0.2'\n          }\n        }\n      );\n      const json2 = await response2.json();\n      //setData(json2.DailyForecasts);\n\n      //console.log(json.properties.timeseries.time[3 - 1].data.instant.details.air_temperature);\n      //ddd2 = JSON.stringify(json2.properties.timeseries[5].data.instant.details.air_temperature);\n      //console.log(JSON.stringify(json2));\n\n      //setForecastAW1(JSON.stringify(json.DailyForecasts[1].Temperature.Minimum.Value));\n      setForecastAW1(JSON.stringify(json2.DailyForecasts[0].Temperature.Minimum.Value));//три строчки ищут значения\n      setForecastAW2(JSON.stringify(json2.DailyForecasts[1].Temperature.Minimum.Value));\n      setForecastAW3(JSON.stringify(json2.DailyForecasts[2].Temperature.Minimum.Value));\n      //setForecast2(JSON.stringify(json.properties.timeseries[24].data.instant.details.air_temperature));\n      //setForecast3(JSON.stringify(json.properties.timeseries[48].data.instant.details.air_temperature));\n\n      //console.log(JSON.search(json.properties.timeseries, '//data'));\n      //rrr = response;\n      //setData(response);  \n\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getForecast();\n  }, []);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.titleView}>\n        <Text style={styles.title}>\n          Enter your city\n        </Text>\n      </View>\n\n      <View style={styles.search}>\n        <View style={styles.input}>\n          <TextInput />\n        </View>\n        <View style={styles.btnSrch}>\n          <Button\n            title=\"k\"\n            onPress={() => Alert.alert('Simple Button pressed')}\n          />\n        </View>\n      </View>\n\n      <View style={styles.line0}>\n        <View style={styles.column}>\n          <Text style={styles.title}>\n\n          </Text>\n        </View>\n        <View style={styles.column}>\n          <Text style={styles.title}>\n            Today\n          </Text>\n        </View>\n        <View style={styles.column}>\n          <Text style={styles.title}>\n            Tomorrow\n          </Text>\n        </View>\n        <View style={styles.column}>\n          <Text style={styles.title}>\n            After tomorrow\n          </Text>\n        </View>\n      </View>\n\n      <View style={styles.line}>\n        <View style={styles.column}>\n          <Text style={styles.title}>\n            YR\n          </Text>\n        </View>\n        <View style={styles.column}>\n          {isLoading ? <Text style={styles.title}>...</Text> : (\n            <Text style={styles.title}>{forecast1}</Text>\n          )}\n        </View>\n\n        <View style={styles.column}>\n          {isLoading ? <Text style={styles.title}>...</Text> : (\n            <Text style={styles.title}>{forecast2}</Text>\n          )}\n        </View>\n        <View style={styles.column}>\n          {isLoading ? <Text style={styles.title}>...</Text> : (\n            <Text style={styles.title}>{forecast3}</Text>\n          )}\n        </View>\n      </View>\n\n      <View style={styles.line}>\n        <View style={styles.column}>\n          <Text style={styles.title}>\n            AccuWeather\n          </Text>\n        </View>\n        <View style={styles.column}>\n          {isLoading ? <Text style={styles.title}>...</Text> : (\n            <Text style={styles.title}>{forecastAW1}</Text>\n          )}\n        </View>\n        <View style={styles.column}>\n          {isLoading ? <Text style={styles.title}>...</Text> : (\n            <Text style={styles.title}>{forecastAW2}</Text>\n          )}\n        </View>\n        <View style={styles.column}>\n          {isLoading ? <Text style={styles.title}>...</Text> : (\n            <Text style={styles.title}>{forecastAW3}</Text>\n          )}\n        </View>\n      </View>\n\n      <View style={styles.line}>\n        <View style={styles.column}>\n          <Text style={styles.title}>\n            Yandex\n          </Text>\n        </View>\n        <View style={styles.column}>\n          <Text style={styles.title}>\n            500\n          </Text>\n        </View>\n        <View style={styles.column}>\n          <Text style={styles.title}>\n            -0\n          </Text>\n        </View>\n        <View style={styles.column}>\n          <Text style={styles.title}>\n            -2\n          </Text>\n        </View>\n      </View>\n\n      <View style={styles.line}>\n        <View style={styles.column}>\n          <Text style={styles.title}>\n            Calculator\n          </Text>\n        </View>\n        <View style={styles.column}>\n          <Text style={styles.title}>\n            19\n          </Text>\n        </View>\n        <View style={styles.column}>\n          <Text style={styles.title}>\n            -5\n          </Text>\n        </View>\n        <View style={styles.column}>\n          <Text style={styles.title}>\n            -11\n          </Text>\n        </View>\n      </View>\n\n      <View style={{ padding: 24 }}>\n        {isLoading ? <ActivityIndicator /> : (\n\n          <FlatList\n            data={data}\n            keyExtractor={({ time }, index) => time}\n            renderItem={({ item }) => (\n              <Text>{item.data.instant.details.air_temperature}</Text>\n            )}\n          />\n\n        )}\n      </View>\n\n    </SafeAreaView >\n  );\n}\n//стили\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: \"3%\",// отступ справа и слева\n    marginTop: 30, // отступ сверху экрана \n  },\n  title: {\n    textAlign: 'center',//текст по середине\n  },\n  titleView: {\n    marginVertical: '2%', /* отступ сверху и снизу */\n  },\n  btnSrch: {\n    flex: 1,//динамическое распределение(занимает все пространство)\n  },\n  input: {\n    borderWidth: 1,//толщина рамки\n    flex: 10,\n  },\n  search: {\n    flexDirection: \"row\",//вью распологаются друг за дружкой по горизонтали\n  },\n  line: {\n    flexDirection: \"row\",\n    marginTop: 10,\n  },\n  column: {\n    flex: 1,\n  },\n  line0: {\n    flexDirection: \"row\",\n    marginTop: 40,\n  },\n});"]},"metadata":{},"sourceType":"module"}